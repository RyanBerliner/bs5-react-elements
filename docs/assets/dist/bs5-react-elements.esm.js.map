{"version":3,"file":"bs5-react-elements.esm.js","sources":["../src/lib/hooks.js","../src/lib/Alert.jsx","../src/lib/Carousel.jsx","../src/lib/Collapse.jsx","../src/lib/Dropdown.jsx","../src/lib/Modal.jsx","../src/lib/Offcanvas.jsx","../src/lib/Popover.jsx","../src/lib/Tab.jsx","../src/lib/Toast.jsx","../src/lib/Tooltip.jsx"],"sourcesContent":["import {useEffect, useRef} from 'react';\n\n/**\n * Hook to initialize a component, bind events, and expose bootstrap apis.\n *\n * @param {Object} Component Bootstrap component object (Modal, Tooltip, etc)\n * @param {Object} config (optional) Configuration object of the component\n * @param {Object} componentRef (optional) A ref to reference the component\n * @param {Object} domRef A ref pointing to the dom element of the component\n * @param {Map} events Mapping of bootstrap event names and function handlers\n */\nexport function useBootstrap(\n    Component,\n    config,\n    componentRef,\n    domRef,\n    events,\n) {\n  const initialConfig = useRef(config);\n\n  useEffect(() => {\n    const component = Component.getInstance(domRef.current) ||\n      new Component(domRef.current, initialConfig.current);\n    if (componentRef) {\n      componentRef.current = component;\n    }\n\n    return () => component.dispose();\n  }, [Component, componentRef, domRef]);\n\n  useEffect(() => {\n    const el = domRef.current;\n    events.forEach((value, key) => {\n      el.addEventListener(key, value);\n    });\n\n    return () => {\n      events.forEach((value, key) => {\n        el.removeEventListener(key, value);\n      });\n    };\n  }, [domRef, events]);\n}\n","import React, {useRef, useMemo} from 'react';\nimport PropTypes from 'prop-types';\nimport {Alert} from 'bootstrap';\nimport {useBootstrap} from './hooks.js';\n\n/**\n * Wrapper for the <a href=\"https://getbootstrap.com/docs/5.0/components/alerts/\">Bootstrap alert component.</a>\n */\nfunction AlertComponent({\n  onClosed,\n  onClose,\n  component,\n  children,\n  ...props\n}) {\n  const componentElement = useRef();\n\n  const events = useMemo(() => {\n    return new Map([\n      ['closed.bs.alert', onClosed],\n      ['close.bs.alert', onClose],\n    ]);\n  }, [onClosed, onClose]);\n\n  useBootstrap(Alert, undefined, component, componentElement, events);\n\n  return (\n    <div ref={componentElement} {...props}>\n      {children}\n    </div>\n  );\n}\n\nAlertComponent.propTypes = {\n  /**\n   * Handler for the closed.bs.alert event\n   */\n  onClosed: PropTypes.func,\n  /**\n   * Handler for the close.bs.alert event\n   */\n  onClose: PropTypes.func,\n  /**\n   * React ref that will be assigned the component instance\n   */\n  component: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({current: PropTypes.any}),\n  ]),\n  /**\n   * Alert contents\n   */\n  children: PropTypes.node,\n};\n\nAlertComponent.displayName = 'Alert';\n\nexport {AlertComponent as Alert};\n","import React, {useRef, useMemo} from 'react';\nimport PropTypes from 'prop-types';\nimport {Carousel} from 'bootstrap';\nimport {useBootstrap} from './hooks.js';\n\n/**\n * Wrapper for the <a href=\"https://getbootstrap.com/docs/5.0/components/carousel/\">Bootstrap carousel component.</a>\n */\nfunction CarouselComponent({\n  onSlid,\n  onSlide,\n  component,\n  config,\n  children,\n  ...props\n}) {\n  const componentElement = useRef();\n\n  const events = useMemo(() => {\n    return new Map([\n      ['slid.bs.carousel', onSlid],\n      ['slide.bs.carousel', onSlide],\n    ]);\n  }, [onSlid, onSlide]);\n\n  useBootstrap(Carousel, config, component, componentElement, events);\n\n  return (\n    <div ref={componentElement} {...props}>\n      {children}\n    </div>\n  );\n}\n\nCarouselComponent.propTypes = {\n  /**\n   * Handler for the slid.bs.carousel event\n   */\n  onSlid: PropTypes.func,\n  /**\n   * Handler for the slide.bs.carousel event\n   */\n  onSlide: PropTypes.func,\n  /**\n   * React ref that will be assigned the component instance\n   */\n  component: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({current: PropTypes.any}),\n  ]),\n  /**\n   * Component configuration\n   */\n  config: PropTypes.object,\n  /**\n   * Dropdown contents\n   */\n  children: PropTypes.node,\n};\n\nCarouselComponent.displayName = 'Carousel';\n\nexport {CarouselComponent as Carousel};\n","import React, {useRef, useMemo} from 'react';\nimport PropTypes from 'prop-types';\nimport {Collapse} from 'bootstrap';\nimport {useBootstrap} from './hooks.js';\n\n/**\n * Wrapper for the <a href=\"https://getbootstrap.com/docs/5.0/components/collapse/\">Bootstrap collapse component.</a>\n */\nfunction CollapseComponent({\n  onShown,\n  onShow,\n  onHidden,\n  onHide,\n  component,\n  config,\n  children,\n  ...props\n}) {\n  const componentElement = useRef();\n\n  const events = useMemo(() => {\n    return new Map([\n      ['shown.bs.collapse', onShown],\n      ['show.bs.collapse', onShow],\n      ['hidden.bs.collapse', onHidden],\n      ['hide.bs.collapse', onHide],\n    ]);\n  }, [onShown, onShow, onHidden, onHide]);\n\n  useBootstrap(Collapse, config, component, componentElement, events);\n\n  return (\n    <div ref={componentElement} {...props}>\n      {children}\n    </div>\n  );\n}\n\nCollapseComponent.propTypes = {\n  /**\n   * Handler for the shown.bs.collapse event\n   */\n  onShown: PropTypes.func,\n  /**\n   * Handler for the show.bs.collapse event\n   */\n  onShow: PropTypes.func,\n  /**\n   * Handler for the hidden.bs.collapse event\n   */\n  onHidden: PropTypes.func,\n  /**\n   * Handler for the hide.bs.collapse event\n   */\n  onHide: PropTypes.func,\n  /**\n   * React ref that will be assigned the component instance\n   */\n  component: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({current: PropTypes.any}),\n  ]),\n  /**\n   * Component configuration\n   */\n  config: PropTypes.object,\n  /**\n   * Collapse contents\n   */\n  children: PropTypes.node,\n};\n\nCollapseComponent.displayName = 'Collapse';\n\nexport {CollapseComponent as Collapse};\n","import React, {useRef, useMemo} from 'react';\nimport PropTypes from 'prop-types';\nimport {Dropdown} from 'bootstrap';\nimport {useBootstrap} from './hooks.js';\n\n/**\n * Wrapper for the <a href=\"https://getbootstrap.com/docs/5.0/components/dropdowns/\">Bootstrap dropdown component.</a>\n */\nfunction DropdownComponent({\n  onShown,\n  onShow,\n  onHidden,\n  onHide,\n  component,\n  config,\n  children,\n  as: ElementType,\n  ...props\n}) {\n  const componentElement = useRef();\n\n  const events = useMemo(() => {\n    return new Map([\n      ['shown.bs.dropdown', onShown],\n      ['show.bs.dropdown', onShow],\n      ['hidden.bs.dropdown', onHidden],\n      ['hide.bs.dropdown', onHide],\n    ]);\n  }, [onShown, onShow, onHidden, onHide]);\n\n  useBootstrap(Dropdown, config, component, componentElement, events);\n\n  return (\n    <ElementType ref={componentElement} {...props}>\n      {children}\n    </ElementType>\n  );\n}\n\nDropdownComponent.propTypes = {\n  /**\n   * Handler for the shown.bs.dropdown event\n   */\n  onShown: PropTypes.func,\n  /**\n   * Handler for the show.bs.dropdown event\n   */\n  onShow: PropTypes.func,\n  /**\n   * Handler for the hidden.bs.dropdown event\n   */\n  onHidden: PropTypes.func,\n  /**\n   * Handler for the hide.bs.dropdown event\n   */\n  onHide: PropTypes.func,\n  /**\n   * React ref that will be assigned the component instance\n   */\n  component: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({current: PropTypes.any}),\n  ]),\n  /**\n   * Component configuration\n   */\n  config: PropTypes.object,\n  /**\n   * Dropdown contents\n   */\n  children: PropTypes.node,\n  /**\n   * The element type of the dropdown\n   */\n  as: PropTypes.elementType,\n};\n\nDropdownComponent.defaultProps = {\n  as: 'button',\n};\n\nDropdownComponent.displayName = 'Dropdown';\n\nexport {DropdownComponent as Dropdown};\n","import React, {useRef, useMemo} from 'react';\nimport PropTypes from 'prop-types';\nimport {Modal} from 'bootstrap';\nimport {useBootstrap} from './hooks.js';\n\n/**\n * Wrapper for the <a href=\"https://getbootstrap.com/docs/5.0/components/modal/\">Bootstrap modal component.</a>\n */\nfunction ModalComponent({\n  onShown,\n  onShow,\n  onHidden,\n  onHide,\n  onHidePrevented,\n  component,\n  config,\n  children,\n  ...props\n}) {\n  const componentElement = useRef();\n\n  const events = useMemo(() => {\n    return new Map([\n      ['shown.bs.modal', onShown],\n      ['show.bs.modal', onShow],\n      ['hidden.bs.modal', onHidden],\n      ['hide.bs.modal', onHide],\n      ['hidePrevented.bs.modal', onHidePrevented],\n    ]);\n  }, [onShown, onShow, onHidden, onHide, onHidePrevented]);\n\n  useBootstrap(Modal, config, component, componentElement, events);\n\n  return (\n    <div ref={componentElement} {...props}>\n      {children}\n    </div>\n  );\n}\n\nModalComponent.propTypes = {\n  /**\n   * Handler for the shown.bs.modal event\n   */\n  onShown: PropTypes.func,\n  /**\n   * Handler for the show.bs.modal event\n   */\n  onShow: PropTypes.func,\n  /**\n   * Handler for the hidden.bs.modal event\n   */\n  onHidden: PropTypes.func,\n  /**\n   * Handler for the hide.bs.modal event\n   */\n  onHide: PropTypes.func,\n  /**\n   * Handler for the hidePrevented.bs.modal event\n   */\n  onHidePrevented: PropTypes.func,\n  /**\n   * React ref that will be assigned the component instance\n   */\n  component: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({current: PropTypes.any}),\n  ]),\n  /**\n   * Component configuration\n   */\n  config: PropTypes.object,\n  /**\n   * Modal contents\n   */\n  children: PropTypes.node,\n};\n\nModalComponent.displayName = 'Modal';\n\nexport {ModalComponent as Modal};\n","import React, {useRef, useMemo} from 'react';\nimport PropTypes from 'prop-types';\nimport {Offcanvas} from 'bootstrap';\nimport {useBootstrap} from './hooks.js';\n\n/**\n * Wrapper for the <a href=\"https://getbootstrap.com/docs/5.0/components/offcanvas/\">Bootstrap offcanvas component.</a>\n */\nfunction OffcanvasComponent({\n  onShown,\n  onShow,\n  onHidden,\n  onHide,\n  component,\n  config,\n  children,\n  ...props\n}) {\n  const componentElement = useRef();\n\n  const events = useMemo(() => {\n    return new Map([\n      ['shown.bs.offcanvas', onShown],\n      ['show.bs.offcanvas', onShow],\n      ['hidden.bs.offcanvas', onHidden],\n      ['hide.bs.offcanvas', onHide],\n    ]);\n  }, [onShown, onShow, onHidden, onHide]);\n\n  useBootstrap(Offcanvas, config, component, componentElement, events);\n\n  return (\n    <div ref={componentElement} {...props}>\n      {children}\n    </div>\n  );\n}\n\nOffcanvasComponent.propTypes = {\n  /**\n   * Handler for the shown.bs.offcanvas event\n   */\n  onShown: PropTypes.func,\n  /**\n   * Handler for the show.bs.offcanvas event\n   */\n  onShow: PropTypes.func,\n  /**\n   * Handler for the hidden.bs.offcanvas event\n   */\n  onHidden: PropTypes.func,\n  /**\n   * Handler for the hide.bs.offcanvas event\n   */\n  onHide: PropTypes.func,\n  /**\n   * React ref that will be assigned the component instance\n   */\n  component: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({current: PropTypes.any}),\n  ]),\n  /**\n   * Component configuration\n   */\n  config: PropTypes.object,\n  /**\n   * Offcanvas contents\n   */\n  children: PropTypes.node,\n};\n\nOffcanvasComponent.displayName = 'Offcanvas';\n\nexport {OffcanvasComponent as Offcanvas};\n","import React, {useRef, useMemo} from 'react';\nimport PropTypes from 'prop-types';\nimport {Popover} from 'bootstrap';\nimport {useBootstrap} from './hooks.js';\n\n/**\n * Wrapper for the <a href=\"https://getbootstrap.com/docs/5.0/components/popovers/\">Bootstrap popover component.</a>\n */\nfunction PopoverComponent({\n  onShown,\n  onShow,\n  onHidden,\n  onHide,\n  onInserted,\n  component,\n  config,\n  children,\n  as: ElementType,\n  ...props\n}) {\n  const componentElement = useRef();\n\n  const events = useMemo(() => {\n    return new Map([\n      ['shown.bs.popover', onShown],\n      ['show.bs.popover', onShow],\n      ['hidden.bs.popover', onHidden],\n      ['hide.bs.popover', onHide],\n      ['inserted.bs.popover', onInserted],\n    ]);\n  }, [onShown, onShow, onHidden, onHide, onInserted]);\n\n  useBootstrap(Popover, config, component, componentElement, events);\n\n  return (\n    <ElementType ref={componentElement} {...props}>\n      {children}\n    </ElementType>\n  );\n}\n\nPopoverComponent.propTypes = {\n  /**\n   * Handler for the shown.bs.popover event\n   */\n  onShown: PropTypes.func,\n  /**\n   * Handler for the show.bs.popover event\n   */\n  onShow: PropTypes.func,\n  /**\n   * Handler for the hidden.bs.popover event\n   */\n  onHidden: PropTypes.func,\n  /**\n   * Handler for the hide.bs.popover event\n   */\n  onHide: PropTypes.func,\n  /**\n   * Handler for the inserted.bs.popover event\n   */\n  onInserted: PropTypes.func,\n  /**\n   * React ref that will be assigned the component instance\n   */\n  component: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({current: PropTypes.any}),\n  ]),\n  /**\n   * Component configuration\n   */\n  config: PropTypes.object,\n  /**\n   * Popover contents\n   */\n  children: PropTypes.node,\n  /**\n   * The element type of the popover\n   */\n  as: PropTypes.elementType,\n};\n\nPopoverComponent.defaultProps = {\n  as: 'span',\n};\n\nPopoverComponent.displayName = 'Popover';\n\nexport {PopoverComponent as Popover};\n","import React, {useRef, useMemo} from 'react';\nimport PropTypes from 'prop-types';\nimport {Tab} from 'bootstrap';\nimport {useBootstrap} from './hooks.js';\n\n/**\n * Wrapper for the <a href=\"https://getbootstrap.com/docs/5.0/components/navs-tabs/\">Bootstrap tab component.</a>\n */\nfunction TabComponent({\n  onShown,\n  onShow,\n  onHidden,\n  onHide,\n  component,\n  children,\n  as: ElementType,\n  ...props\n}) {\n  const componentElement = useRef();\n\n  const events = useMemo(() => {\n    return new Map([\n      ['shown.bs.tab', onShown],\n      ['show.bs.tab', onShow],\n      ['hidden.bs.tab', onHidden],\n      ['hide.bs.tab', onHide],\n    ]);\n  }, [onShown, onShow, onHidden, onHide]);\n\n  useBootstrap(Tab, undefined, component, componentElement, events);\n\n  return (\n    <ElementType ref={componentElement} {...props}>\n      {children}\n    </ElementType>\n  );\n}\n\nTabComponent.propTypes = {\n  /**\n   * Handler for the shown.bs.tab event\n   */\n  onShown: PropTypes.func,\n  /**\n   * Handler for the show.bs.tab event\n   */\n  onShow: PropTypes.func,\n  /**\n   * Handler for the hidden.bs.tab event\n   */\n  onHidden: PropTypes.func,\n  /**\n   * Handler for the hide.bs.tab event\n   */\n  onHide: PropTypes.func,\n  /**\n   * React ref that will be assigned the component instance\n   */\n  component: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({current: PropTypes.any}),\n  ]),\n  /**\n   * Tab contents\n   */\n  children: PropTypes.node,\n  /**\n   * The element type of the tab\n   */\n  as: PropTypes.elementType,\n};\n\nTabComponent.defaultProps = {\n  as: 'button',\n};\n\nTabComponent.displayName = 'Tab';\n\nexport {TabComponent as Tab};\n","import React, {useRef, useMemo} from 'react';\nimport PropTypes from 'prop-types';\nimport {Toast} from 'bootstrap';\nimport {useBootstrap} from './hooks.js';\n\n/**\n * Wrapper for the <a href=\"https://getbootstrap.com/docs/5.0/components/toasts/\">Bootstrap toast component.</a>\n */\nfunction ToastComponent({\n  onShown,\n  onShow,\n  onHidden,\n  onHide,\n  component,\n  config,\n  children,\n  ...props\n}) {\n  const componentElement = useRef();\n\n  const events = useMemo(() => {\n    return new Map([\n      ['shown.bs.toast', onShown],\n      ['show.bs.toast', onShow],\n      ['hidden.bs.toast', onHidden],\n      ['hide.bs.toast', onHide],\n    ]);\n  }, [onShown, onShow, onHidden, onHide]);\n\n  useBootstrap(Toast, config, component, componentElement, events);\n\n  return (\n    <div ref={componentElement} {...props}>\n      {children}\n    </div>\n  );\n}\n\nToastComponent.propTypes = {\n  /**\n   * Handler for the shown.bs.toast event\n   */\n  onShown: PropTypes.func,\n  /**\n   * Handler for the show.bs.toast event\n   */\n  onShow: PropTypes.func,\n  /**\n   * Handler for the hidden.bs.toast event\n   */\n  onHidden: PropTypes.func,\n  /**\n   * Handler for the hide.bs.toast event\n   */\n  onHide: PropTypes.func,\n  /**\n   * React ref that will be assigned the component instance\n   */\n  component: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({current: PropTypes.any}),\n  ]),\n  /**\n   * Component configuration\n   */\n  config: PropTypes.object,\n  /**\n   * Toast contents\n   */\n  children: PropTypes.node,\n};\n\nToastComponent.displayName = 'Toast';\n\nexport {ToastComponent as Toast};\n","import React, {useRef, useMemo} from 'react';\nimport PropTypes from 'prop-types';\nimport {Tooltip} from 'bootstrap';\nimport {useBootstrap} from './hooks.js';\n\n/**\n * Wrapper for the <a href=\"https://getbootstrap.com/docs/5.0/components/tooltips/\">Bootstrap tooltip component.</a>\n */\nfunction TooltipComponent({\n  onShown,\n  onShow,\n  onHidden,\n  onHide,\n  onInserted,\n  component,\n  config,\n  children,\n  as: ElementType,\n  ...props\n}) {\n  const componentElement = useRef();\n\n  const events = useMemo(() => {\n    return new Map([\n      ['shown.bs.tooltip', onShown],\n      ['show.bs.tooltip', onShow],\n      ['hidden.bs.tooltip', onHidden],\n      ['hide.bs.tooltip', onHide],\n      ['inserted.bs.tooltip', onInserted],\n    ]);\n  }, [onShown, onShow, onHidden, onHide, onInserted]);\n\n  useBootstrap(Tooltip, config, component, componentElement, events);\n\n  return (\n    <ElementType ref={componentElement} {...props}>\n      {children}\n    </ElementType>\n  );\n}\n\nTooltipComponent.propTypes = {\n  /**\n   * Handler for the shown.bs.tooltip event\n   */\n  onShown: PropTypes.func,\n  /**\n   * Handler for the show.bs.tooltip event\n   */\n  onShow: PropTypes.func,\n  /**\n   * Handler for the hidden.bs.tooltip event\n   */\n  onHidden: PropTypes.func,\n  /**\n   * Handler for the hide.bs.tooltip event\n   */\n  onHide: PropTypes.func,\n  /**\n   * Handler for the inserted.bs.tooltip event\n   */\n  onInserted: PropTypes.func,\n  /**\n   * React ref that will be assigned the component instance\n   */\n  component: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({current: PropTypes.any}),\n  ]),\n  /**\n   * Component configuration\n   */\n  config: PropTypes.object,\n  /**\n   * Tooltip contents\n   */\n  children: PropTypes.node,\n  /**\n   * The element type of the tooltip\n   */\n  as: PropTypes.elementType,\n};\n\nTooltipComponent.defaultProps = {\n  as: 'span',\n};\n\nTooltipComponent.displayName = 'Tooltip';\n\nexport {TooltipComponent as Tooltip};\n"],"names":["useBootstrap","Component","config","componentRef","domRef","events","initialConfig","useRef","useEffect","component","getInstance","current","dispose","el","forEach","value","key","addEventListener","removeEventListener","AlertComponent","onClosed","onClose","children","props","componentElement","useMemo","Map","Alert","undefined","displayName","CarouselComponent","onSlid","onSlide","Carousel","CollapseComponent","onShown","onShow","onHidden","onHide","Collapse","DropdownComponent","ElementType","as","Dropdown","defaultProps","ModalComponent","onHidePrevented","Modal","OffcanvasComponent","Offcanvas","PopoverComponent","onInserted","Popover","TabComponent","Tab","ToastComponent","Toast","TooltipComponent","Tooltip"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASA,YAAT,CACHC,SADG,EAEHC,MAFG,EAGHC,YAHG,EAIHC,MAJG,EAKHC,MALG,EAML;AACA,MAAMC,aAAa,GAAGC,MAAM,CAACL,MAAD,CAA5B;AAEAM,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMC,SAAS,GAAGR,SAAS,CAACS,WAAV,CAAsBN,MAAM,CAACO,OAA7B,KAChB,IAAIV,SAAJ,CAAcG,MAAM,CAACO,OAArB,EAA8BL,aAAa,CAACK,OAA5C,CADF;;AAEA,QAAIR,YAAJ,EAAkB;AAChBA,MAAAA,YAAY,CAACQ,OAAb,GAAuBF,SAAvB;AACD;;AAED,WAAO;AAAA,aAAMA,SAAS,CAACG,OAAV,EAAN;AAAA,KAAP;AACD,GARQ,EAQN,CAACX,SAAD,EAAYE,YAAZ,EAA0BC,MAA1B,CARM,CAAT;AAUAI,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMK,EAAE,GAAGT,MAAM,CAACO,OAAlB;AACAN,IAAAA,MAAM,CAACS,OAAP,CAAe,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC7BH,MAAAA,EAAE,CAACI,gBAAH,CAAoBD,GAApB,EAAyBD,KAAzB;AACD,KAFD;AAIA,WAAO,YAAM;AACXV,MAAAA,MAAM,CAACS,OAAP,CAAe,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC7BH,QAAAA,EAAE,CAACK,mBAAH,CAAuBF,GAAvB,EAA4BD,KAA5B;AACD,OAFD;AAGD,KAJD;AAKD,GAXQ,EAWN,CAACX,MAAD,EAASC,MAAT,CAXM,CAAT;AAYD;;;ACrCD;AACA;AACA;;AACA,SAASc,cAAT,OAMG;AAAA,MALDC,QAKC,QALDA,QAKC;AAAA,MAJDC,OAIC,QAJDA,OAIC;AAAA,MAHDZ,SAGC,QAHDA,SAGC;AAAA,MAFDa,QAEC,QAFDA,QAEC;AAAA,MADEC,KACF;;AACD,MAAMC,gBAAgB,GAAGjB,MAAM,EAA/B;AAEA,MAAMF,MAAM,GAAGoB,OAAO,CAAC,YAAM;AAC3B,WAAO,IAAIC,GAAJ,CAAQ,CACb,CAAC,iBAAD,EAAoBN,QAApB,CADa,EAEb,CAAC,gBAAD,EAAmBC,OAAnB,CAFa,CAAR,CAAP;AAID,GALqB,EAKnB,CAACD,QAAD,EAAWC,OAAX,CALmB,CAAtB;AAOArB,EAAAA,YAAY,CAAC2B,KAAD,EAAQC,SAAR,EAAmBnB,SAAnB,EAA8Be,gBAA9B,EAAgDnB,MAAhD,CAAZ;AAEA,sBACE;AAAK,IAAA,GAAG,EAAEmB;AAAV,KAAgCD,KAAhC,GACGD,QADH,CADF;AAKD;;AAwBDH,cAAc,CAACU,WAAf,GAA6B,OAA7B;;;AClDA;AACA;AACA;;AACA,SAASC,iBAAT,OAOG;AAAA,MANDC,MAMC,QANDA,MAMC;AAAA,MALDC,OAKC,QALDA,OAKC;AAAA,MAJDvB,SAIC,QAJDA,SAIC;AAAA,MAHDP,MAGC,QAHDA,MAGC;AAAA,MAFDoB,QAEC,QAFDA,QAEC;AAAA,MADEC,KACF;;AACD,MAAMC,gBAAgB,GAAGjB,MAAM,EAA/B;AAEA,MAAMF,MAAM,GAAGoB,OAAO,CAAC,YAAM;AAC3B,WAAO,IAAIC,GAAJ,CAAQ,CACb,CAAC,kBAAD,EAAqBK,MAArB,CADa,EAEb,CAAC,mBAAD,EAAsBC,OAAtB,CAFa,CAAR,CAAP;AAID,GALqB,EAKnB,CAACD,MAAD,EAASC,OAAT,CALmB,CAAtB;AAOAhC,EAAAA,YAAY,CAACiC,QAAD,EAAW/B,MAAX,EAAmBO,SAAnB,EAA8Be,gBAA9B,EAAgDnB,MAAhD,CAAZ;AAEA,sBACE;AAAK,IAAA,GAAG,EAAEmB;AAAV,KAAgCD,KAAhC,GACGD,QADH,CADF;AAKD;;AA4BDQ,iBAAiB,CAACD,WAAlB,GAAgC,UAAhC;;;ACvDA;AACA;AACA;;AACA,SAASK,iBAAT,OASG;AAAA,MARDC,OAQC,QARDA,OAQC;AAAA,MAPDC,MAOC,QAPDA,MAOC;AAAA,MANDC,QAMC,QANDA,QAMC;AAAA,MALDC,MAKC,QALDA,MAKC;AAAA,MAJD7B,SAIC,QAJDA,SAIC;AAAA,MAHDP,MAGC,QAHDA,MAGC;AAAA,MAFDoB,QAEC,QAFDA,QAEC;AAAA,MADEC,KACF;;AACD,MAAMC,gBAAgB,GAAGjB,MAAM,EAA/B;AAEA,MAAMF,MAAM,GAAGoB,OAAO,CAAC,YAAM;AAC3B,WAAO,IAAIC,GAAJ,CAAQ,CACb,CAAC,mBAAD,EAAsBS,OAAtB,CADa,EAEb,CAAC,kBAAD,EAAqBC,MAArB,CAFa,EAGb,CAAC,oBAAD,EAAuBC,QAAvB,CAHa,EAIb,CAAC,kBAAD,EAAqBC,MAArB,CAJa,CAAR,CAAP;AAMD,GAPqB,EAOnB,CAACH,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,EAA4BC,MAA5B,CAPmB,CAAtB;AASAtC,EAAAA,YAAY,CAACuC,QAAD,EAAWrC,MAAX,EAAmBO,SAAnB,EAA8Be,gBAA9B,EAAgDnB,MAAhD,CAAZ;AAEA,sBACE;AAAK,IAAA,GAAG,EAAEmB;AAAV,KAAgCD,KAAhC,GACGD,QADH,CADF;AAKD;;AAoCDY,iBAAiB,CAACL,WAAlB,GAAgC,UAAhC;;;ACnEA;AACA;AACA;;AACA,SAASW,iBAAT,OAUG;AAAA,MATDL,OASC,QATDA,OASC;AAAA,MARDC,MAQC,QARDA,MAQC;AAAA,MAPDC,QAOC,QAPDA,QAOC;AAAA,MANDC,MAMC,QANDA,MAMC;AAAA,MALD7B,SAKC,QALDA,SAKC;AAAA,MAJDP,MAIC,QAJDA,MAIC;AAAA,MAHDoB,QAGC,QAHDA,QAGC;AAAA,MAFGmB,WAEH,QAFDC,EAEC;AAAA,MADEnB,KACF;;AACD,MAAMC,gBAAgB,GAAGjB,MAAM,EAA/B;AAEA,MAAMF,MAAM,GAAGoB,OAAO,CAAC,YAAM;AAC3B,WAAO,IAAIC,GAAJ,CAAQ,CACb,CAAC,mBAAD,EAAsBS,OAAtB,CADa,EAEb,CAAC,kBAAD,EAAqBC,MAArB,CAFa,EAGb,CAAC,oBAAD,EAAuBC,QAAvB,CAHa,EAIb,CAAC,kBAAD,EAAqBC,MAArB,CAJa,CAAR,CAAP;AAMD,GAPqB,EAOnB,CAACH,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,EAA4BC,MAA5B,CAPmB,CAAtB;AASAtC,EAAAA,YAAY,CAAC2C,QAAD,EAAWzC,MAAX,EAAmBO,SAAnB,EAA8Be,gBAA9B,EAAgDnB,MAAhD,CAAZ;AAEA,sBACE,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEmB;AAAlB,KAAwCD,KAAxC,GACGD,QADH,CADF;AAKD;;AAwCDkB,iBAAiB,CAACI,YAAlB,GAAiC;AAC/BF,EAAAA,EAAE,EAAE;AAD2B,CAAjC;AAIAF,iBAAiB,CAACX,WAAlB,GAAgC,UAAhC;;;AC5EA;AACA;AACA;;AACA,SAASgB,cAAT,OAUG;AAAA,MATDV,OASC,QATDA,OASC;AAAA,MARDC,MAQC,QARDA,MAQC;AAAA,MAPDC,QAOC,QAPDA,QAOC;AAAA,MANDC,MAMC,QANDA,MAMC;AAAA,MALDQ,eAKC,QALDA,eAKC;AAAA,MAJDrC,SAIC,QAJDA,SAIC;AAAA,MAHDP,MAGC,QAHDA,MAGC;AAAA,MAFDoB,QAEC,QAFDA,QAEC;AAAA,MADEC,KACF;;AACD,MAAMC,gBAAgB,GAAGjB,MAAM,EAA/B;AAEA,MAAMF,MAAM,GAAGoB,OAAO,CAAC,YAAM;AAC3B,WAAO,IAAIC,GAAJ,CAAQ,CACb,CAAC,gBAAD,EAAmBS,OAAnB,CADa,EAEb,CAAC,eAAD,EAAkBC,MAAlB,CAFa,EAGb,CAAC,iBAAD,EAAoBC,QAApB,CAHa,EAIb,CAAC,eAAD,EAAkBC,MAAlB,CAJa,EAKb,CAAC,wBAAD,EAA2BQ,eAA3B,CALa,CAAR,CAAP;AAOD,GARqB,EAQnB,CAACX,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,EAA4BC,MAA5B,EAAoCQ,eAApC,CARmB,CAAtB;AAUA9C,EAAAA,YAAY,CAAC+C,KAAD,EAAQ7C,MAAR,EAAgBO,SAAhB,EAA2Be,gBAA3B,EAA6CnB,MAA7C,CAAZ;AAEA,sBACE;AAAK,IAAA,GAAG,EAAEmB;AAAV,KAAgCD,KAAhC,GACGD,QADH,CADF;AAKD;;AAwCDuB,cAAc,CAAChB,WAAf,GAA6B,OAA7B;;;ACzEA;AACA;AACA;;AACA,SAASmB,kBAAT,OASG;AAAA,MARDb,OAQC,QARDA,OAQC;AAAA,MAPDC,MAOC,QAPDA,MAOC;AAAA,MANDC,QAMC,QANDA,QAMC;AAAA,MALDC,MAKC,QALDA,MAKC;AAAA,MAJD7B,SAIC,QAJDA,SAIC;AAAA,MAHDP,MAGC,QAHDA,MAGC;AAAA,MAFDoB,QAEC,QAFDA,QAEC;AAAA,MADEC,KACF;;AACD,MAAMC,gBAAgB,GAAGjB,MAAM,EAA/B;AAEA,MAAMF,MAAM,GAAGoB,OAAO,CAAC,YAAM;AAC3B,WAAO,IAAIC,GAAJ,CAAQ,CACb,CAAC,oBAAD,EAAuBS,OAAvB,CADa,EAEb,CAAC,mBAAD,EAAsBC,MAAtB,CAFa,EAGb,CAAC,qBAAD,EAAwBC,QAAxB,CAHa,EAIb,CAAC,mBAAD,EAAsBC,MAAtB,CAJa,CAAR,CAAP;AAMD,GAPqB,EAOnB,CAACH,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,EAA4BC,MAA5B,CAPmB,CAAtB;AASAtC,EAAAA,YAAY,CAACiD,SAAD,EAAY/C,MAAZ,EAAoBO,SAApB,EAA+Be,gBAA/B,EAAiDnB,MAAjD,CAAZ;AAEA,sBACE;AAAK,IAAA,GAAG,EAAEmB;AAAV,KAAgCD,KAAhC,GACGD,QADH,CADF;AAKD;;AAoCD0B,kBAAkB,CAACnB,WAAnB,GAAiC,WAAjC;;;ACnEA;AACA;AACA;;AACA,SAASqB,gBAAT,OAWG;AAAA,MAVDf,OAUC,QAVDA,OAUC;AAAA,MATDC,MASC,QATDA,MASC;AAAA,MARDC,QAQC,QARDA,QAQC;AAAA,MAPDC,MAOC,QAPDA,MAOC;AAAA,MANDa,UAMC,QANDA,UAMC;AAAA,MALD1C,SAKC,QALDA,SAKC;AAAA,MAJDP,MAIC,QAJDA,MAIC;AAAA,MAHDoB,QAGC,QAHDA,QAGC;AAAA,MAFGmB,WAEH,QAFDC,EAEC;AAAA,MADEnB,KACF;;AACD,MAAMC,gBAAgB,GAAGjB,MAAM,EAA/B;AAEA,MAAMF,MAAM,GAAGoB,OAAO,CAAC,YAAM;AAC3B,WAAO,IAAIC,GAAJ,CAAQ,CACb,CAAC,kBAAD,EAAqBS,OAArB,CADa,EAEb,CAAC,iBAAD,EAAoBC,MAApB,CAFa,EAGb,CAAC,mBAAD,EAAsBC,QAAtB,CAHa,EAIb,CAAC,iBAAD,EAAoBC,MAApB,CAJa,EAKb,CAAC,qBAAD,EAAwBa,UAAxB,CALa,CAAR,CAAP;AAOD,GARqB,EAQnB,CAAChB,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,EAA4BC,MAA5B,EAAoCa,UAApC,CARmB,CAAtB;AAUAnD,EAAAA,YAAY,CAACoD,OAAD,EAAUlD,MAAV,EAAkBO,SAAlB,EAA6Be,gBAA7B,EAA+CnB,MAA/C,CAAZ;AAEA,sBACE,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEmB;AAAlB,KAAwCD,KAAxC,GACGD,QADH,CADF;AAKD;;AA4CD4B,gBAAgB,CAACN,YAAjB,GAAgC;AAC9BF,EAAAA,EAAE,EAAE;AAD0B,CAAhC;AAIAQ,gBAAgB,CAACrB,WAAjB,GAA+B,SAA/B;;;AClFA;AACA;AACA;;AACA,SAASwB,YAAT,OASG;AAAA,MARDlB,OAQC,QARDA,OAQC;AAAA,MAPDC,MAOC,QAPDA,MAOC;AAAA,MANDC,QAMC,QANDA,QAMC;AAAA,MALDC,MAKC,QALDA,MAKC;AAAA,MAJD7B,SAIC,QAJDA,SAIC;AAAA,MAHDa,QAGC,QAHDA,QAGC;AAAA,MAFGmB,WAEH,QAFDC,EAEC;AAAA,MADEnB,KACF;;AACD,MAAMC,gBAAgB,GAAGjB,MAAM,EAA/B;AAEA,MAAMF,MAAM,GAAGoB,OAAO,CAAC,YAAM;AAC3B,WAAO,IAAIC,GAAJ,CAAQ,CACb,CAAC,cAAD,EAAiBS,OAAjB,CADa,EAEb,CAAC,aAAD,EAAgBC,MAAhB,CAFa,EAGb,CAAC,eAAD,EAAkBC,QAAlB,CAHa,EAIb,CAAC,aAAD,EAAgBC,MAAhB,CAJa,CAAR,CAAP;AAMD,GAPqB,EAOnB,CAACH,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,EAA4BC,MAA5B,CAPmB,CAAtB;AASAtC,EAAAA,YAAY,CAACsD,GAAD,EAAM1B,SAAN,EAAiBnB,SAAjB,EAA4Be,gBAA5B,EAA8CnB,MAA9C,CAAZ;AAEA,sBACE,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEmB;AAAlB,KAAwCD,KAAxC,GACGD,QADH,CADF;AAKD;;AAoCD+B,YAAY,CAACT,YAAb,GAA4B;AAC1BF,EAAAA,EAAE,EAAE;AADsB,CAA5B;AAIAW,YAAY,CAACxB,WAAb,GAA2B,KAA3B;;;ACvEA;AACA;AACA;;AACA,SAAS0B,cAAT,OASG;AAAA,MARDpB,OAQC,QARDA,OAQC;AAAA,MAPDC,MAOC,QAPDA,MAOC;AAAA,MANDC,QAMC,QANDA,QAMC;AAAA,MALDC,MAKC,QALDA,MAKC;AAAA,MAJD7B,SAIC,QAJDA,SAIC;AAAA,MAHDP,MAGC,QAHDA,MAGC;AAAA,MAFDoB,QAEC,QAFDA,QAEC;AAAA,MADEC,KACF;;AACD,MAAMC,gBAAgB,GAAGjB,MAAM,EAA/B;AAEA,MAAMF,MAAM,GAAGoB,OAAO,CAAC,YAAM;AAC3B,WAAO,IAAIC,GAAJ,CAAQ,CACb,CAAC,gBAAD,EAAmBS,OAAnB,CADa,EAEb,CAAC,eAAD,EAAkBC,MAAlB,CAFa,EAGb,CAAC,iBAAD,EAAoBC,QAApB,CAHa,EAIb,CAAC,eAAD,EAAkBC,MAAlB,CAJa,CAAR,CAAP;AAMD,GAPqB,EAOnB,CAACH,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,EAA4BC,MAA5B,CAPmB,CAAtB;AASAtC,EAAAA,YAAY,CAACwD,KAAD,EAAQtD,MAAR,EAAgBO,SAAhB,EAA2Be,gBAA3B,EAA6CnB,MAA7C,CAAZ;AAEA,sBACE;AAAK,IAAA,GAAG,EAAEmB;AAAV,KAAgCD,KAAhC,GACGD,QADH,CADF;AAKD;;AAoCDiC,cAAc,CAAC1B,WAAf,GAA6B,OAA7B;;;ACnEA;AACA;AACA;;AACA,SAAS4B,gBAAT,OAWG;AAAA,MAVDtB,OAUC,QAVDA,OAUC;AAAA,MATDC,MASC,QATDA,MASC;AAAA,MARDC,QAQC,QARDA,QAQC;AAAA,MAPDC,MAOC,QAPDA,MAOC;AAAA,MANDa,UAMC,QANDA,UAMC;AAAA,MALD1C,SAKC,QALDA,SAKC;AAAA,MAJDP,MAIC,QAJDA,MAIC;AAAA,MAHDoB,QAGC,QAHDA,QAGC;AAAA,MAFGmB,WAEH,QAFDC,EAEC;AAAA,MADEnB,KACF;;AACD,MAAMC,gBAAgB,GAAGjB,MAAM,EAA/B;AAEA,MAAMF,MAAM,GAAGoB,OAAO,CAAC,YAAM;AAC3B,WAAO,IAAIC,GAAJ,CAAQ,CACb,CAAC,kBAAD,EAAqBS,OAArB,CADa,EAEb,CAAC,iBAAD,EAAoBC,MAApB,CAFa,EAGb,CAAC,mBAAD,EAAsBC,QAAtB,CAHa,EAIb,CAAC,iBAAD,EAAoBC,MAApB,CAJa,EAKb,CAAC,qBAAD,EAAwBa,UAAxB,CALa,CAAR,CAAP;AAOD,GARqB,EAQnB,CAAChB,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,EAA4BC,MAA5B,EAAoCa,UAApC,CARmB,CAAtB;AAUAnD,EAAAA,YAAY,CAAC0D,OAAD,EAAUxD,MAAV,EAAkBO,SAAlB,EAA6Be,gBAA7B,EAA+CnB,MAA/C,CAAZ;AAEA,sBACE,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEmB;AAAlB,KAAwCD,KAAxC,GACGD,QADH,CADF;AAKD;;AA4CDmC,gBAAgB,CAACb,YAAjB,GAAgC;AAC9BF,EAAAA,EAAE,EAAE;AAD0B,CAAhC;AAIAe,gBAAgB,CAAC5B,WAAjB,GAA+B,SAA/B;;;;"}