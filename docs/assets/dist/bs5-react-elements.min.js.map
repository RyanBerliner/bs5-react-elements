{"version":3,"file":"bs5-react-elements.min.js","sources":["../src/lib/hooks.js","../src/lib/Alert.jsx","../src/lib/Carousel.jsx","../src/lib/Collapse.jsx","../src/lib/Dropdown.jsx","../src/lib/Modal.jsx","../src/lib/Offcanvas.jsx","../src/lib/Popover.jsx","../src/lib/Tab.jsx","../src/lib/Toast.jsx","../src/lib/Tooltip.jsx"],"sourcesContent":["import {useEffect, useRef} from 'react';\n\n/**\n * Hook to initialize a component, bind events, and expose bootstrap apis.\n *\n * @param {Object} Component Bootstrap component object (Modal, Tooltip, etc)\n * @param {Object} config (optional) Configuration object of the component\n * @param {Object} componentRef (optional) A ref to reference the component\n * @param {Object} domRef A ref pointing to the dom element of the component\n * @param {Map} events Mapping of bootstrap event names and function handlers\n */\nexport function useBootstrap(\n    Component,\n    config,\n    componentRef,\n    domRef,\n    events,\n) {\n  const initialConfig = useRef(config);\n\n  useEffect(() => {\n    const component = Component.getInstance(domRef.current) ||\n      new Component(domRef.current, initialConfig.current);\n    if (componentRef) {\n      componentRef.current = component;\n    }\n\n    return () => component.dispose();\n  }, [Component, componentRef, domRef]);\n\n  useEffect(() => {\n    const el = domRef.current;\n    events.forEach((value, key) => {\n      el.addEventListener(key, value);\n    });\n\n    return () => {\n      events.forEach((value, key) => {\n        el.removeEventListener(key, value);\n      });\n    };\n  }, [domRef, events]);\n}\n","import React, {useRef, useMemo} from 'react';\nimport PropTypes from 'prop-types';\nimport {Alert} from 'bootstrap';\nimport {useBootstrap} from './hooks.js';\n\n/**\n * Wrapper for the <a href=\"https://getbootstrap.com/docs/5.3/components/alerts/\">Bootstrap alert component.</a>\n */\nfunction AlertComponent({\n  onClosed,\n  onClose,\n  component,\n  children,\n  ...props\n}) {\n  const componentElement = useRef();\n\n  const events = useMemo(() => {\n    return new Map([\n      ['closed.bs.alert', onClosed],\n      ['close.bs.alert', onClose],\n    ]);\n  }, [onClosed, onClose]);\n\n  useBootstrap(Alert, undefined, component, componentElement, events);\n\n  return (\n    <div ref={componentElement} {...props}>\n      {children}\n    </div>\n  );\n}\n\nAlertComponent.propTypes = {\n  /**\n   * Handler for the closed.bs.alert event\n   * @since 0.2.0\n   */\n  onClosed: PropTypes.func,\n  /**\n   * Handler for the close.bs.alert event\n   * @since 0.2.0\n   */\n  onClose: PropTypes.func,\n  /**\n   * React ref that will be assigned the component instance\n   * @since 0.2.0\n   */\n  component: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({current: PropTypes.any}),\n  ]),\n  /**\n   * Alert contents\n   * @since 0.2.0\n   */\n  children: PropTypes.node,\n};\n\nAlertComponent.displayName = 'Alert';\n\nexport {AlertComponent as Alert};\n","import React, {useRef, useMemo} from 'react';\nimport PropTypes from 'prop-types';\nimport {Carousel} from 'bootstrap';\nimport {useBootstrap} from './hooks.js';\n\n/**\n * Wrapper for the <a href=\"https://getbootstrap.com/docs/5.3/components/carousel/\">Bootstrap carousel component.</a>\n */\nfunction CarouselComponent({\n  onSlid,\n  onSlide,\n  component,\n  config,\n  children,\n  ...props\n}) {\n  const componentElement = useRef();\n\n  const events = useMemo(() => {\n    return new Map([\n      ['slid.bs.carousel', onSlid],\n      ['slide.bs.carousel', onSlide],\n    ]);\n  }, [onSlid, onSlide]);\n\n  useBootstrap(Carousel, config, component, componentElement, events);\n\n  return (\n    <div ref={componentElement} {...props}>\n      {children}\n    </div>\n  );\n}\n\nCarouselComponent.propTypes = {\n  /**\n   * Handler for the slid.bs.carousel event\n   * @since 0.2.0\n   */\n  onSlid: PropTypes.func,\n  /**\n   * Handler for the slide.bs.carousel event\n   * @since 0.2.0\n   */\n  onSlide: PropTypes.func,\n  /**\n   * React ref that will be assigned the component instance\n   * @since 0.2.0\n   */\n  component: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({current: PropTypes.any}),\n  ]),\n  /**\n   * Component configuration\n   * @since 0.2.0\n   */\n  config: PropTypes.object,\n  /**\n   * Dropdown contents\n   * @since 0.2.0\n   */\n  children: PropTypes.node,\n};\n\nCarouselComponent.displayName = 'Carousel';\n\nexport {CarouselComponent as Carousel};\n","import React, {useRef, useMemo} from 'react';\nimport PropTypes from 'prop-types';\nimport {Collapse} from 'bootstrap';\nimport {useBootstrap} from './hooks.js';\n\n/**\n * Wrapper for the <a href=\"https://getbootstrap.com/docs/5.3/components/collapse/\">Bootstrap collapse component.</a>\n */\nfunction CollapseComponent({\n  onShown,\n  onShow,\n  onHidden,\n  onHide,\n  component,\n  config,\n  children,\n  ...props\n}) {\n  const componentElement = useRef();\n\n  const events = useMemo(() => {\n    return new Map([\n      ['shown.bs.collapse', onShown],\n      ['show.bs.collapse', onShow],\n      ['hidden.bs.collapse', onHidden],\n      ['hide.bs.collapse', onHide],\n    ]);\n  }, [onShown, onShow, onHidden, onHide]);\n\n  useBootstrap(Collapse, config, component, componentElement, events);\n\n  return (\n    <div ref={componentElement} {...props}>\n      {children}\n    </div>\n  );\n}\n\nCollapseComponent.propTypes = {\n  /**\n   * Handler for the shown.bs.collapse event\n   * @since 0.2.0\n   */\n  onShown: PropTypes.func,\n  /**\n   * Handler for the show.bs.collapse event\n   * @since 0.2.0\n   */\n  onShow: PropTypes.func,\n  /**\n   * Handler for the hidden.bs.collapse event\n   * @since 0.2.0\n   */\n  onHidden: PropTypes.func,\n  /**\n   * Handler for the hide.bs.collapse event\n   * @since 0.2.0\n   */\n  onHide: PropTypes.func,\n  /**\n   * React ref that will be assigned the component instance\n   * @since 0.2.0\n   */\n  component: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({current: PropTypes.any}),\n  ]),\n  /**\n   * Component configuration\n   * @since 0.2.0\n   */\n  config: PropTypes.object,\n  /**\n   * Collapse contents\n   * @since 0.2.0\n   */\n  children: PropTypes.node,\n};\n\nCollapseComponent.displayName = 'Collapse';\n\nexport {CollapseComponent as Collapse};\n","import React, {useRef, useMemo} from 'react';\nimport PropTypes from 'prop-types';\nimport {Dropdown} from 'bootstrap';\nimport {useBootstrap} from './hooks.js';\n\n/**\n * Wrapper for the <a href=\"https://getbootstrap.com/docs/5.3/components/dropdowns/\">Bootstrap dropdown component.</a>\n */\nfunction DropdownComponent({\n  onShown,\n  onShow,\n  onHidden,\n  onHide,\n  component,\n  config,\n  children,\n  as: ElementType,\n  ...props\n}) {\n  const componentElement = useRef();\n\n  const events = useMemo(() => {\n    return new Map([\n      ['shown.bs.dropdown', onShown],\n      ['show.bs.dropdown', onShow],\n      ['hidden.bs.dropdown', onHidden],\n      ['hide.bs.dropdown', onHide],\n    ]);\n  }, [onShown, onShow, onHidden, onHide]);\n\n  useBootstrap(Dropdown, config, component, componentElement, events);\n\n  return (\n    <ElementType ref={componentElement} {...props}>\n      {children}\n    </ElementType>\n  );\n}\n\nDropdownComponent.propTypes = {\n  /**\n   * Handler for the shown.bs.dropdown event\n   * @since 0.2.0\n   */\n  onShown: PropTypes.func,\n  /**\n   * Handler for the show.bs.dropdown event\n   * @since 0.2.0\n   */\n  onShow: PropTypes.func,\n  /**\n   * Handler for the hidden.bs.dropdown event\n   * @since 0.2.0\n   */\n  onHidden: PropTypes.func,\n  /**\n   * Handler for the hide.bs.dropdown event\n   * @since 0.2.0\n   */\n  onHide: PropTypes.func,\n  /**\n   * React ref that will be assigned the component instance\n   * @since 0.2.0\n   */\n  component: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({current: PropTypes.any}),\n  ]),\n  /**\n   * Component configuration\n   * @since 0.2.0\n   */\n  config: PropTypes.object,\n  /**\n   * Dropdown contents\n   * @since 0.2.0\n   */\n  children: PropTypes.node,\n  /**\n   * The element type of the dropdown\n   * @since 0.2.0\n   */\n  as: PropTypes.elementType,\n};\n\nDropdownComponent.defaultProps = {\n  as: 'button',\n};\n\nDropdownComponent.displayName = 'Dropdown';\n\nexport {DropdownComponent as Dropdown};\n","import React, {useRef, useMemo} from 'react';\nimport PropTypes from 'prop-types';\nimport {Modal} from 'bootstrap';\nimport {useBootstrap} from './hooks.js';\n\n/**\n * Wrapper for the <a href=\"https://getbootstrap.com/docs/5.3/components/modal/\">Bootstrap modal component.</a>\n */\nfunction ModalComponent({\n  onShown,\n  onShow,\n  onHidden,\n  onHide,\n  onHidePrevented,\n  component,\n  config,\n  children,\n  ...props\n}) {\n  const componentElement = useRef();\n\n  const events = useMemo(() => {\n    return new Map([\n      ['shown.bs.modal', onShown],\n      ['show.bs.modal', onShow],\n      ['hidden.bs.modal', onHidden],\n      ['hide.bs.modal', onHide],\n      ['hidePrevented.bs.modal', onHidePrevented],\n    ]);\n  }, [onShown, onShow, onHidden, onHide, onHidePrevented]);\n\n  useBootstrap(Modal, config, component, componentElement, events);\n\n  return (\n    <div ref={componentElement} {...props}>\n      {children}\n    </div>\n  );\n}\n\nModalComponent.propTypes = {\n  /**\n   * Handler for the shown.bs.modal event\n   * @since 0.1.0\n   */\n  onShown: PropTypes.func,\n  /**\n   * Handler for the show.bs.modal event\n   * @since 0.1.0\n   */\n  onShow: PropTypes.func,\n  /**\n   * Handler for the hidden.bs.modal event\n   * @since 0.1.0\n   */\n  onHidden: PropTypes.func,\n  /**\n   * Handler for the hide.bs.modal event\n   * @since 0.1.0\n   */\n  onHide: PropTypes.func,\n  /**\n   * Handler for the hidePrevented.bs.modal event\n   * @since 0.1.0\n   */\n  onHidePrevented: PropTypes.func,\n  /**\n   * React ref that will be assigned the component instance\n   * @since 0.1.0\n   */\n  component: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({current: PropTypes.any}),\n  ]),\n  /**\n   * Component configuration\n   * @since 0.1.0\n   */\n  config: PropTypes.object,\n  /**\n   * Modal contents\n   * @since 0.1.0\n   */\n  children: PropTypes.node,\n};\n\nModalComponent.displayName = 'Modal';\n\nexport {ModalComponent as Modal};\n","import React, {useRef, useMemo} from 'react';\nimport PropTypes from 'prop-types';\nimport {Offcanvas} from 'bootstrap';\nimport {useBootstrap} from './hooks.js';\n\n/**\n * Wrapper for the <a href=\"https://getbootstrap.com/docs/5.3/components/offcanvas/\">Bootstrap offcanvas component.</a>\n */\nfunction OffcanvasComponent({\n  onShown,\n  onShow,\n  onHidden,\n  onHide,\n  component,\n  config,\n  children,\n  ...props\n}) {\n  const componentElement = useRef();\n\n  const events = useMemo(() => {\n    return new Map([\n      ['shown.bs.offcanvas', onShown],\n      ['show.bs.offcanvas', onShow],\n      ['hidden.bs.offcanvas', onHidden],\n      ['hide.bs.offcanvas', onHide],\n    ]);\n  }, [onShown, onShow, onHidden, onHide]);\n\n  useBootstrap(Offcanvas, config, component, componentElement, events);\n\n  return (\n    <div ref={componentElement} {...props}>\n      {children}\n    </div>\n  );\n}\n\nOffcanvasComponent.propTypes = {\n  /**\n   * Handler for the shown.bs.offcanvas event\n   * @since 0.2.0\n   */\n  onShown: PropTypes.func,\n  /**\n   * Handler for the show.bs.offcanvas event\n   * @since 0.2.0\n   */\n  onShow: PropTypes.func,\n  /**\n   * Handler for the hidden.bs.offcanvas event\n   * @since 0.2.0\n   */\n  onHidden: PropTypes.func,\n  /**\n   * Handler for the hide.bs.offcanvas event\n   * @since 0.2.0\n   */\n  onHide: PropTypes.func,\n  /**\n   * React ref that will be assigned the component instance\n   * @since 0.2.0\n   */\n  component: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({current: PropTypes.any}),\n  ]),\n  /**\n   * Component configuration\n   * @since 0.2.0\n   */\n  config: PropTypes.object,\n  /**\n   * Offcanvas contents\n   * @since 0.2.0\n   */\n  children: PropTypes.node,\n};\n\nOffcanvasComponent.displayName = 'Offcanvas';\n\nexport {OffcanvasComponent as Offcanvas};\n","import React, {useRef, useMemo, useCallback, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport {Popover} from 'bootstrap';\nimport {useBootstrap} from './hooks.js';\n\n/**\n * Wrapper for the <a href=\"https://getbootstrap.com/docs/5.3/components/popovers/\">Bootstrap popover component.</a>\n */\nfunction PopoverComponent({\n  onShown,\n  onShow,\n  onHidden,\n  onHide,\n  onInserted,\n  component,\n  config,\n  children,\n  as: ElementType,\n  renderTitle,\n  renderContent,\n  ...props\n}) {\n  const componentElement = useRef();\n  const [tip, setTip] = useState();\n\n  const wrappedOnInserted = useCallback((event) => {\n    const tipId = componentElement.current.getAttribute('aria-describedby');\n    const tip = document.getElementById(tipId);\n\n    if (renderTitle) {\n      tip.querySelector('.popover-header').innerHTML = '';\n    }\n\n    if (renderContent) {\n      tip.querySelector('.popover-body').innerHTML = '';\n    }\n\n    setTip(tip);\n\n    if (onInserted) {\n      onInserted(event);\n    }\n  }, [onInserted, renderTitle, renderContent]);\n\n  const wrappedOnHide = useCallback((event) => {\n    setTip(null);\n\n    if (onHide) {\n      onHide(event);\n    }\n  }, [onHide]);\n\n  const events = useMemo(() => {\n    return new Map([\n      ['shown.bs.popover', onShown],\n      ['show.bs.popover', onShow],\n      ['hidden.bs.popover', onHidden],\n      ['hide.bs.popover', wrappedOnHide],\n      ['inserted.bs.popover', wrappedOnInserted],\n    ]);\n  }, [onShown, onShow, onHidden, wrappedOnHide, wrappedOnInserted]);\n\n  if (!config) {\n    config = {};\n  }\n\n  if ((renderTitle || renderContent) && config.animation !== false) {\n    config.animation = false;\n  }\n\n  useBootstrap(Popover, config, component, componentElement, events);\n\n  if (renderTitle) {\n    props.title = ' ';\n  }\n\n  if (renderContent) {\n    props['data-bs-content'] = ' ';\n  }\n\n  return (\n    <ElementType ref={componentElement} {...props}>\n      {children}\n      {(tip && renderTitle) && ReactDOM.createPortal(\n          renderTitle(Popover.getInstance(componentElement.current)),\n          tip.querySelector('.popover-header'),\n      )}\n      {(tip && renderContent) && ReactDOM.createPortal(\n          renderContent(Popover.getInstance(componentElement.current)),\n          tip.querySelector('.popover-body'),\n      )}\n    </ElementType>\n  );\n}\n\nPopoverComponent.propTypes = {\n  /**\n   * Handler for the shown.bs.popover event\n   * @since 0.2.0\n   */\n  onShown: PropTypes.func,\n  /**\n   * Handler for the show.bs.popover event\n   * @since 0.2.0\n   */\n  onShow: PropTypes.func,\n  /**\n   * Handler for the hidden.bs.popover event\n   * @since 0.2.0\n   */\n  onHidden: PropTypes.func,\n  /**\n   * Handler for the hide.bs.popover event\n   * @since 0.2.0\n   */\n  onHide: PropTypes.func,\n  /**\n   * Handler for the inserted.bs.popover event\n   * @since 0.2.0\n   */\n  onInserted: PropTypes.func,\n  /**\n   * React ref that will be assigned the component instance\n   * @since 0.2.0\n   */\n  component: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({current: PropTypes.any}),\n  ]),\n  /**\n   * Component configuration\n   * @since 0.2.0\n   */\n  config: PropTypes.object,\n  /**\n   * Popover contents\n   * @since 0.2.0\n   */\n  children: PropTypes.node,\n  /**\n   * The element type of the popover\n   * @since 0.2.0\n   */\n  as: PropTypes.elementType,\n  /**\n   * Render popover title as a react component\n   * @since 2.0.0\n   */\n  renderTitle: PropTypes.func,\n  /**\n   * Render popover content as a react component\n   * @since 2.0.0\n   */\n  renderContent: PropTypes.func,\n};\n\nPopoverComponent.defaultProps = {\n  as: 'span',\n};\n\nPopoverComponent.displayName = 'Popover';\n\nexport {PopoverComponent as Popover};\n","import React, {useRef, useMemo} from 'react';\nimport PropTypes from 'prop-types';\nimport {Tab} from 'bootstrap';\nimport {useBootstrap} from './hooks.js';\n\n/**\n * Wrapper for the <a href=\"https://getbootstrap.com/docs/5.3/components/navs-tabs/\">Bootstrap tab component.</a>\n */\nfunction TabComponent({\n  onShown,\n  onShow,\n  onHidden,\n  onHide,\n  component,\n  children,\n  as: ElementType,\n  ...props\n}) {\n  const componentElement = useRef();\n\n  const events = useMemo(() => {\n    return new Map([\n      ['shown.bs.tab', onShown],\n      ['show.bs.tab', onShow],\n      ['hidden.bs.tab', onHidden],\n      ['hide.bs.tab', onHide],\n    ]);\n  }, [onShown, onShow, onHidden, onHide]);\n\n  useBootstrap(Tab, undefined, component, componentElement, events);\n\n  return (\n    <ElementType ref={componentElement} {...props}>\n      {children}\n    </ElementType>\n  );\n}\n\nTabComponent.propTypes = {\n  /**\n   * Handler for the shown.bs.tab event\n   * @since 0.2.0\n   */\n  onShown: PropTypes.func,\n  /**\n   * Handler for the show.bs.tab event\n   * @since 0.2.0\n   */\n  onShow: PropTypes.func,\n  /**\n   * Handler for the hidden.bs.tab event\n   * @since 0.2.0\n   */\n  onHidden: PropTypes.func,\n  /**\n   * Handler for the hide.bs.tab event\n   * @since 0.2.0\n   */\n  onHide: PropTypes.func,\n  /**\n   * React ref that will be assigned the component instance\n   * @since 0.2.0\n   */\n  component: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({current: PropTypes.any}),\n  ]),\n  /**\n   * Tab contents\n   * @since 0.2.0\n   */\n  children: PropTypes.node,\n  /**\n   * The element type of the tab\n   * @since 0.2.0\n   */\n  as: PropTypes.elementType,\n};\n\nTabComponent.defaultProps = {\n  as: 'button',\n};\n\nTabComponent.displayName = 'Tab';\n\nexport {TabComponent as Tab};\n","import React, {useRef, useMemo} from 'react';\nimport PropTypes from 'prop-types';\nimport {Toast} from 'bootstrap';\nimport {useBootstrap} from './hooks.js';\n\n/**\n * Wrapper for the <a href=\"https://getbootstrap.com/docs/5.3/components/toasts/\">Bootstrap toast component.</a>\n */\nfunction ToastComponent({\n  onShown,\n  onShow,\n  onHidden,\n  onHide,\n  component,\n  config,\n  children,\n  ...props\n}) {\n  const componentElement = useRef();\n\n  const events = useMemo(() => {\n    return new Map([\n      ['shown.bs.toast', onShown],\n      ['show.bs.toast', onShow],\n      ['hidden.bs.toast', onHidden],\n      ['hide.bs.toast', onHide],\n    ]);\n  }, [onShown, onShow, onHidden, onHide]);\n\n  useBootstrap(Toast, config, component, componentElement, events);\n\n  return (\n    <div ref={componentElement} {...props}>\n      {children}\n    </div>\n  );\n}\n\nToastComponent.propTypes = {\n  /**\n   * Handler for the shown.bs.toast event\n   * @since 0.2.0\n   */\n  onShown: PropTypes.func,\n  /**\n   * Handler for the show.bs.toast event\n   * @since 0.2.0\n   */\n  onShow: PropTypes.func,\n  /**\n   * Handler for the hidden.bs.toast event\n   * @since 0.2.0\n   */\n  onHidden: PropTypes.func,\n  /**\n   * Handler for the hide.bs.toast event\n   * @since 0.2.0\n   */\n  onHide: PropTypes.func,\n  /**\n   * React ref that will be assigned the component instance\n   * @since 0.2.0\n   */\n  component: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({current: PropTypes.any}),\n  ]),\n  /**\n   * Component configuration\n   * @since 0.2.0\n   */\n  config: PropTypes.object,\n  /**\n   * Toast contents\n   * @since 0.2.0\n   */\n  children: PropTypes.node,\n};\n\nToastComponent.displayName = 'Toast';\n\nexport {ToastComponent as Toast};\n","import React, {useRef, useMemo, useCallback, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport {Tooltip} from 'bootstrap';\nimport {useBootstrap} from './hooks.js';\n\n/**\n * Wrapper for the <a href=\"https://getbootstrap.com/docs/5.3/components/tooltips/\">Bootstrap tooltip component.</a>\n */\nfunction TooltipComponent({\n  onShown,\n  onShow,\n  onHidden,\n  onHide,\n  onInserted,\n  component,\n  config,\n  children,\n  as: ElementType,\n  renderTitle,\n  ...props\n}) {\n  const componentElement = useRef();\n  const [tip, setTip] = useState();\n\n  const wrappedOnInserted = useCallback((event) => {\n    const tipId = componentElement.current.getAttribute('aria-describedby');\n    const tip = document.getElementById(tipId);\n    const inner = tip.querySelector('.tooltip-inner');\n\n    if (renderTitle) {\n      inner.innerHTML = '';\n    }\n\n    setTip(inner);\n\n    if (onInserted) {\n      onInserted(event);\n    }\n  }, [onInserted, renderTitle]);\n\n  const wrappedOnHide = useCallback((event) => {\n    setTip(null);\n\n    if (onHide) {\n      onHide(event);\n    }\n  }, [onHide]);\n\n  const events = useMemo(() => {\n    return new Map([\n      ['shown.bs.tooltip', onShown],\n      ['show.bs.tooltip', onShow],\n      ['hidden.bs.tooltip', onHidden],\n      ['hide.bs.tooltip', wrappedOnHide],\n      ['inserted.bs.tooltip', wrappedOnInserted],\n    ]);\n  }, [onShown, onShow, onHidden, wrappedOnHide, wrappedOnInserted]);\n\n  if (!config) {\n    config = {};\n  }\n\n  if (renderTitle && config.animation !== false) {\n    config.animation = false;\n  }\n\n  useBootstrap(Tooltip, config, component, componentElement, events);\n\n  if (renderTitle) {\n    props.title = ' ';\n  }\n\n  return (\n    <ElementType ref={componentElement} {...props}>\n      {children}\n      {(tip && renderTitle) && ReactDOM.createPortal(\n          renderTitle(Tooltip.getInstance(componentElement.current)),\n          tip,\n      )}\n    </ElementType>\n  );\n}\n\nTooltipComponent.propTypes = {\n  /**\n   * Handler for the shown.bs.tooltip event\n   * @since 0.1.0\n   */\n  onShown: PropTypes.func,\n  /**\n   * Handler for the show.bs.tooltip event\n   * @since 0.1.0\n   */\n  onShow: PropTypes.func,\n  /**\n   * Handler for the hidden.bs.tooltip event\n   * @since 0.1.0\n   */\n  onHidden: PropTypes.func,\n  /**\n   * Handler for the hide.bs.tooltip event\n   * @since 0.1.0\n   */\n  onHide: PropTypes.func,\n  /**\n   * Handler for the inserted.bs.tooltip event\n   * @since 0.1.0\n   */\n  onInserted: PropTypes.func,\n  /**\n   * React ref that will be assigned the component instance\n   * @since 0.1.0\n   */\n  component: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({current: PropTypes.any}),\n  ]),\n  /**\n   * Component configuration\n   * @since 0.1.0\n   */\n  config: PropTypes.object,\n  /**\n   * Tooltip contents\n   * @since 0.1.0\n   */\n  children: PropTypes.node,\n  /**\n   * The element type of the tooltip\n   * @since 0.1.0\n   */\n  as: PropTypes.elementType,\n  /**\n   * Render tooltip content as a react component\n   * @since 2.0.0\n   */\n  renderTitle: PropTypes.func,\n};\n\nTooltipComponent.defaultProps = {\n  as: 'span',\n};\n\nTooltipComponent.displayName = 'Tooltip';\n\nexport {TooltipComponent as Tooltip};\n"],"names":["useBootstrap","Component","config","componentRef","domRef","events","initialConfig","useRef","useEffect","component","getInstance","current","dispose","el","forEach","value","key","addEventListener","removeEventListener","AlertComponent","_ref","onClosed","onClose","children","props","componentElement","useMemo","Map","Alert","undefined","React","createElement","_extends","ref","CarouselComponent","onSlid","onSlide","Carousel","CollapseComponent","onShown","onShow","onHidden","onHide","Collapse","DropdownComponent","as","ElementType","Dropdown","ModalComponent","onHidePrevented","Modal","OffcanvasComponent","Offcanvas","PopoverComponent","onInserted","renderTitle","renderContent","tip","setTip","useState","wrappedOnInserted","useCallback","event","tipId","getAttribute","document","getElementById","querySelector","innerHTML","wrappedOnHide","animation","Popover","title","ReactDOM","createPortal","TabComponent","Tab","ToastComponent","Toast","TooltipComponent","inner","Tooltip","displayName","defaultProps"],"mappings":"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"}